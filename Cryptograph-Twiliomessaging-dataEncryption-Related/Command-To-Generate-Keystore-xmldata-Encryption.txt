keytool -genseckey -keystore D:\Balaji\Certificates\aeskeystore.jck -storetype jceks -storepass mulesoft -keyalg AES -keysize 128 -alias aeskey -keypass mulesoft



-----------------------------------------------------------------------------------------------------------------------
inOrder to generate the keystore go to ->programfiles->java->jdk-> After opening jdk....in the path tab press "cmd".
paste the above command and enter(Note: Check and give the path where you have to generate the keystore certificate.)


-------------------------------------------------------------------------------------------------------------------------

The above command is used to generate a keystore certificate in the mentioned path. once the certificate is generated
the certificate is copied and pasted in the SRC/main resources folder of the mule project.

This certificate i have used it for the xml data encryption purpose. 
For XML data encryption the keystore is mandatory during the configuration.
refer to the POC done in this PC. Sometimes data need to be encrypted based on the client requirement,
this poc is implemented as an example saying xml payload can be encrypted and decrypted.

*Configure crypto xml encrypt:-

-> Click on Plus(+) symbol to configure the crypto jcecomponent...
                             keystore: aeskeystore.jck
                             type: JCEKS
                             password(which is storepass): mulesoft
Now add crypto symmetric key 

give   keyid: aes128
       alias: aeskey
       password(which is keypass): mulesoft

give keyid again in the component-level-configuration:
     
       keyid: aes128

there is an attribute called the "ELEMENT-PATH" where feild level data encryption can be done(which means particular feild can be encrypted, check the POC done in this PC for feild level data encryption).


*Configure crypto xml decrypt:-

same configurations are followed to data decryption.

------------------------------------------------------------------------------------------------------------------------------


 